rm(list=ls())
setwd("~/Dropbox/Field Paper/New Zealand Data/Merge/")
plotLineChunks = function(validX, baseX, lastX, y, col, electorate)
{
validX = validX[validX>=baseX & validX<=lastX]
if(baseX<ceiling(baseX))
{
lines(c(2+baseX,2+ceiling(baseX)),c(y,y),col=pCol)
baseX=ceiling(baseX)
}
for(i in baseX+1:lastX)
{
if(length(validX[validX==i-1])>0 & length(validX[validX==i])>0)
{
lines(c(2+i-1, 2+i), c(y,y), col=pCol)
}
}
if(lastX>floor(lastX))
{
lines(c(2+floor(lastX),2+lastX),c(y,y),col=pCol)
}
}
partyCol = function(party)
{
if(party=="National") { return("blue") }
else if(party=="Labour") { return("red") }
else if(party=="GP" | party=="Alliance" | party=="NL" | party=="Progressive" | party=="Social Credit") { return("orange") }
else if(party=="NZF" | party=="ACT" | party=="I") { return("black") }
else { print(party)
return("purple") }
}
# Read the election data
dt = read.csv("output.csv", header=TRUE)
stopifnot(nrow(dt)==10267) # Replication, verify all rows loaded exactly
electionDates = c("1946-11-27","1949-11-30", "1951-09-01", "1954-11-13", "1957-11-30", "1960-11-26", "1963-11-30", "1966-11-26", "1969-11-29", "1972-11-25", "1975-11-29", "1978-11-25", "1981-11-28", "1984-07-14", "1987-08-15", "1990-10-27", "1993-11-06", "1996-10-12", "1999-11-27", "2002-07-27", "2005-09-17", "2008-11-08", "2011-11-26", "2014-09-20","2017-12-31")
dt$Electionnum = 0
for(i in 1:(length(electionDates)-1))
{
print(electionDates[i])
tryCatch({
dt[dt$Date==electionDates[i],]$Electionnum = i
})
if(i<length(electionDates))
{
tryCatch({
dt[as.character(dt$Date)>electionDates[i] & as.character(dt$Date)<electionDates[i+1],]$Electionnum = i+0.5
},error=function(e){})
}
}
elected = dt[dt$ElectedElectorate==1,]
whichElectorates = elected %>% group_by(Electorate) %>% summarise(numRows = n(), numParties=length(unique(Party))) %>% filter(numParties>1) %>% filter(numRows>8) %>% select(Electorate)
electorateNames = sort(whichElectorates$Electorate)
pdf("electorateControl.pdf")
par(mar=c(3,1,1.5,2))
plot(c(20),c(50),type="n",
main="Contested Electorate Control over Time",
xlim=c(0,28), ylim=c(0,115),xaxt="n",yaxt="n",axes=F)
for(i in 1:length(electorateNames))
{
text(2,110-2*i,electorateNames[i],cex=0.3,pos=2)
winners = elected[elected$Electorate==electorateNames[i],] %>% arrange(Electionnum)
exist = winners$Electionnum
baseWinner = winners[1,]$Party
baseID = winners[1,]$ID
pCol = partyCol(baseWinner)
baseNumber=1
for(j in 1:nrow(winners))
{
if(winners[j,]$Party!=baseWinner & baseID!=winners[j,]$ID)
{
pCol = partyCol(baseWinner)
plotLineChunks(exist, winners[baseNumber,]$Electionnum, winners[j,]$Electionnum, 110-2*i, pCol,electorateNames[i])
points(2+winners[baseNumber,]$Electionnum, 110-2*i, col=pCol, pch=19, cex=0.8)
baseNumber = j
baseWinner = winners[j,]$Party
baseID = winners[j,]$ID
}
}
pCol = partyCol(baseWinner)
plotLineChunks(exist, winners[baseNumber,]$Electionnum, winners[nrow(winners),]$Electionnum, 110-2*i, pCol,electorateNames[i])
points(2+winners[baseNumber,]$Electionnum, 110-2*i, col=pCol, pch=19, cex=0.8)
}
text(2.7,115,"Legend:",cex=0.7,pos=4)
points(6.0,115,col="red",pch=19,cex=0.8)
text(6.2,115,"Labour",cex=0.7,pos=4)
points(11.0,115,col="blue",pch=19,cex=0.8)
text(11.2,115,"National",cex=0.7,pos=4)
points(16.0,115,col="orange",pch=19,cex=0.8)
text(16.2,115,"Minor/Left",cex=0.7,pos=4)
points(21.0,115,col="black",pch=19,cex=0.8)
text(21.2,115,"Minor/Right", cex=0.7, pos=4)
lines(c(2.6,25.4),c(112.7,112.7),col="black")
lines(c(2.6,25.4),c(117.7,117.7),col="black")
lines(c(2.6,2.6),c(112.7,117.7),col="black")
lines(c(25.4,25.4),c(112.7,117.7),col="black")
axis(1, at=seq(3,27,3), labels=substring(electionDates[seq(1,25,3)],1,4),cex.axis=0.7)
dev.off()
elected %>% group(Date, Party) %>% summarise(NumE=n()) %>% filter(Party=="Labour" | Party=="National") %>% select(Date, Party, NumE) %>% arrange(Date, Party)
library(dplyr)
rm(list=ls())
setwd("~/Dropbox/Field Paper/New Zealand Data/Merge/")
plotLineChunks = function(validX, baseX, lastX, y, col, electorate)
{
validX = validX[validX>=baseX & validX<=lastX]
if(baseX<ceiling(baseX))
{
lines(c(2+baseX,2+ceiling(baseX)),c(y,y),col=pCol)
baseX=ceiling(baseX)
}
for(i in baseX+1:lastX)
{
if(length(validX[validX==i-1])>0 & length(validX[validX==i])>0)
{
lines(c(2+i-1, 2+i), c(y,y), col=pCol)
}
}
if(lastX>floor(lastX))
{
lines(c(2+floor(lastX),2+lastX),c(y,y),col=pCol)
}
}
partyCol = function(party)
{
if(party=="National") { return("blue") }
else if(party=="Labour") { return("red") }
else if(party=="GP" | party=="Alliance" | party=="NL" | party=="Progressive" | party=="Social Credit") { return("orange") }
else if(party=="NZF" | party=="ACT" | party=="I") { return("black") }
else { print(party)
return("purple") }
}
# Read the election data
dt = read.csv("output.csv", header=TRUE)
stopifnot(nrow(dt)==10267) # Replication, verify all rows loaded exactly
electionDates = c("1946-11-27","1949-11-30", "1951-09-01", "1954-11-13", "1957-11-30", "1960-11-26", "1963-11-30", "1966-11-26", "1969-11-29", "1972-11-25", "1975-11-29", "1978-11-25", "1981-11-28", "1984-07-14", "1987-08-15", "1990-10-27", "1993-11-06", "1996-10-12", "1999-11-27", "2002-07-27", "2005-09-17", "2008-11-08", "2011-11-26", "2014-09-20","2017-12-31")
dt$Electionnum = 0
for(i in 1:(length(electionDates)-1))
{
print(electionDates[i])
tryCatch({
dt[dt$Date==electionDates[i],]$Electionnum = i
})
if(i<length(electionDates))
{
tryCatch({
dt[as.character(dt$Date)>electionDates[i] & as.character(dt$Date)<electionDates[i+1],]$Electionnum = i+0.5
},error=function(e){})
}
}
elected = dt[dt$ElectedElectorate==1,]
whichElectorates = elected %>% group_by(Electorate) %>% summarise(numRows = n(), numParties=length(unique(Party))) %>% filter(numParties>1) %>% filter(numRows>8) %>% select(Electorate)
electorateNames = sort(whichElectorates$Electorate)
pdf("electorateControl.pdf")
par(mar=c(3,1,1.5,2))
plot(c(20),c(50),type="n",
main="Contested Electorate Control over Time",
xlim=c(0,28), ylim=c(0,115),xaxt="n",yaxt="n",axes=F)
for(i in 1:length(electorateNames))
{
text(2,110-2*i,electorateNames[i],cex=0.3,pos=2)
winners = elected[elected$Electorate==electorateNames[i],] %>% arrange(Electionnum)
exist = winners$Electionnum
baseWinner = winners[1,]$Party
baseID = winners[1,]$ID
pCol = partyCol(baseWinner)
baseNumber=1
for(j in 1:nrow(winners))
{
if(winners[j,]$Party!=baseWinner & baseID!=winners[j,]$ID)
{
pCol = partyCol(baseWinner)
plotLineChunks(exist, winners[baseNumber,]$Electionnum, winners[j,]$Electionnum, 110-2*i, pCol,electorateNames[i])
points(2+winners[baseNumber,]$Electionnum, 110-2*i, col=pCol, pch=19, cex=0.8)
baseNumber = j
baseWinner = winners[j,]$Party
baseID = winners[j,]$ID
}
}
pCol = partyCol(baseWinner)
plotLineChunks(exist, winners[baseNumber,]$Electionnum, winners[nrow(winners),]$Electionnum, 110-2*i, pCol,electorateNames[i])
points(2+winners[baseNumber,]$Electionnum, 110-2*i, col=pCol, pch=19, cex=0.8)
}
text(2.7,115,"Legend:",cex=0.7,pos=4)
points(6.0,115,col="red",pch=19,cex=0.8)
text(6.2,115,"Labour",cex=0.7,pos=4)
points(11.0,115,col="blue",pch=19,cex=0.8)
text(11.2,115,"National",cex=0.7,pos=4)
points(16.0,115,col="orange",pch=19,cex=0.8)
text(16.2,115,"Minor/Left",cex=0.7,pos=4)
points(21.0,115,col="black",pch=19,cex=0.8)
text(21.2,115,"Minor/Right", cex=0.7, pos=4)
lines(c(2.6,25.4),c(112.7,112.7),col="black")
lines(c(2.6,25.4),c(117.7,117.7),col="black")
lines(c(2.6,2.6),c(112.7,117.7),col="black")
lines(c(25.4,25.4),c(112.7,117.7),col="black")
axis(1, at=seq(3,27,3), labels=substring(electionDates[seq(1,25,3)],1,4),cex.axis=0.7)
dev.off()
elected %>% group(Date, Party) %>% summarise(NumE=n()) %>% filter(Party=="Labour" | Party=="National") %>% select(Date, Party, NumE) %>% arrange(Date, Party)
elected %>% group_by(Date, Party) %>% summarise(NumE=n()) %>% filter(Party=="Labour" | Party=="National") %>% select(Date, Party, NumE) %>% arrange(Date, Party)
View(elected %>% group_by(Date, Party) %>% summarise(NumE=n()) %>% filter(Party=="Labour" | Party=="National") %>% select(Date, Party, NumE) %>% arrange(Date, Party))
nrow(dt[dt$CabinetNow==1 & dt$Date=="1963-11-30",])
